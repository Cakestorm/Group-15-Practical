:root {
    --alma-black:#17171a;
    --alma-white:#edfaff;
    --alma-grey:#201f33;
    --alma-blue:#47a1b3;
    --alma-turquoise:#52cca3;
    --alma-light-blue:#98add9;
    --alma-green:#50c75a;
    --alma-purple:#332966;
}

/* Sane defaults */

img {
    max-width: 100%;
    max-height: 100%;
}

/* Page layout */

html, body {
    margin: 0;
    height: 100%;
    overflow: hidden;
    box-sizing: border-box;
}

body {
    padding: 1rem 0.75rem;
    display: grid;
    grid-template:
        "header header " 4rem
        "editor sidebar"
        ".      .      " 3rem /
        2fr     1fr;
    gap: 1rem 2rem;
}

body > header {
    grid-area: header;
    display: flex;
}

body > main {
    grid-area: editor;
}

body > aside {
    padding-right: 1rem;
    grid-area: sidebar;
    display: grid;
    grid-template:
        "search" 2fr
        "related" 1fr;
}

body > aside section {
    display: flex;
    flex-direction: column;
}

body > aside ol {
    list-style: none;
    margin-top: 0.8rem;
    margin-bottom: 0;
    padding-left: 0;
    height: 100%;
}

/* Page style */

/* NOTE:
 * To target the header, use "body > header [SELECTOR]"
 * To target the sidebar, use "body > aside [SELECTOR]"
 * where [SELECTOR] is the CSS selector that will otherwise select the element
 * to target: for example, "body > aside input[type=text]" selects all text
 * inputs in the sidebar (right now there is only one input, but this will
 * target any future input added there too). */

html {
    font-family: -apple-system, 'Segoe UI', Helvetica, sans-serif;
    color: var(--alma-black);
    background-color: var(--alma-white);
}

body > aside li a {
    text-decoration: none;
    color: var(--alma-grey);
    transition: text-shadow 0.2s ease-in-out;
}

body > aside li a:hover {
    text-shadow: 1px 1px 5px var(--alma-purple);
}

body > aside input[type=text] {
    min-height: 2.4em;
    box-sizing: border-box;
    padding: 0.25em 0.5em;
    background: #fcfeff;
    border: 2px solid var(--alma-purple);
    transition: border 0.2s ease-in-out;
    outline: none;
}

body > aside input[type=text]:hover,
body > aside input[type=text]:focus-within {
    border-width: 4px;
}

/* Editor style */

/* NOTE(@Hera Brown):
 * Please prefix styles targeting Quill editor with ".ql-editor", and
 * styles targeting Quill toolbar with ".ql-toolbar".
 * For example, to make Heading 1 in Quill editor red, write
 * .ql-editor h1 {
 *   color: red;
 * }
 * To make the entire editor has green background, write
 * .ql-editor {
 *   background-color: green;
 * } */

.ql-editor {
    background-color: #fcfeff;
    border: 2px solid var(--alma-purple);
    transition: border 0.2s ease-in-out;
    font-family: -apple-system, 'Segoe UI', Helvetica, sans-serif;
}

.ql-editor:hover, .ql-editor:focus-within {
    border-width: 4px;
}

.ql-editor p {
    margin-top: 0.6rem;
    margin-bottom: 0.6rem;
}

.ql-editor .katex {
    user-select: all;
}

.ql-editor .ql-code-block-container {
    font-family: ui-monospace, 'Consolas', 'SF Mono', monospace;
    color: var(--alma-white) !important;
    background-color: var(--alma-purple) !important;
    border-radius: 0 !important;
}

/* Dark theme */
@media (prefers-color-scheme: dark) {
    html {
        background-color: var(--alma-grey);
        color: var(--alma-white);
    }

    body > aside input[type=text] {
        background-color: var(--alma-black);
        border-color: var(--alma-green);
    }

    body > aside li a { color: var(--alma-light-blue) }
    body > aside li a:hover { text-shadow: 1px 1px 5px var(--alma-blue) }

    .ql-toolbar .ql-picker  { color: var(--alma-white) !important }
    .ql-toolbar svg .ql-stroke { stroke: var(--alma-white) !important }
    .ql-toolbar svg .ql-fill { fill: var(--alma-white) !important }
    .ql-toolbar button:hover { color: var(--alma-blue) !important }
    .ql-toolbar button:hover .ql-stroke { stroke: var(--alma-blue) !important }
    .ql-toolbar button:hover .ql-fill { fill: var(--alma-blue) !important }
    .ql-toolbar .ql-picker-label:hover { color: var(--alma-blue) !important }
    .ql-toolbar .ql-picker-label:hover .ql-stroke { stroke: var(--alma-blue) !important }
    .ql-toolbar .ql-picker-label:hover .ql-fill { fill: var(--alma-blue) !important }
    .ql-toolbar .ql-picker-item:hover { color: var(--alma-blue) !important }
    .ql-toolbar .ql-picker-item:hover .ql-stroke { stroke: var(--alma-blue) !important }
    .ql-toolbar .ql-picker-item:hover .ql-fill { fill: var(--alma-blue) !important }

    .ql-toolbar .ql-picker-options {
        color: var(--alma-white) !important;
        background-color: var(--alma-grey) !important;
    }

    .ql-editor {
        background-color: var(--alma-black);
        border-color: var(--alma-green);
    }
}


@media (prefers-reduced-motion: reduce) {
    .ql-editor,
    body > aside input[type=text] {
        transition: unset;
    }
}

@media print {
    html, .ql-editor {
        background: white;
    }

    body {
        grid-template: "editor";
    }

    body > header, body > aside {
        display: none;
    }

    .ql-toolbar {
        display: none;
    }

    .ql-container, .ql-editor {
        border: none !important;
    }
}
