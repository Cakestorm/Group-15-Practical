{"title": "Algorithms and Data Structures", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "Algorithms and Data Structures"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "A real "}, {"attributes": {"color": "#47a1b3"}, "insert": "beast "}, {"insert": "of a course. Covers the following topics in the following order:\n\n"}, {"attributes": {"link": "#Amortised_Analysis"}, "insert": "Amortised Analysis"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Aggregate"}, "insert": "The aggregate method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Accounting"}, "insert": "The accounting/banker's method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Potential"}, "insert": "The potential function method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Sets"}, "insert": "Disjoint Sets"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Naive_Array"}, "insert": "Naive-array implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linked_List_Implementation"}, "insert": "Linked-list implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Forests"}, "insert": "Disjoint Forests"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-height"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Path compression"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-rank"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Binary_Search_Trees"}, "insert": "Binary Search Trees"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Red_Black_Trees"}, "insert": "Red-Black trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Splay_Trees"}, "insert": "Splay trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Static_Optimality"}, "insert": "Static Optimality"}, {"insert": " and "}, {"attributes": {"link": "#Access_Lemma"}, "insert": "the Access Lemma"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Flow_Networks"}, "insert": "Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Definition of a flow and augmentations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Max-flow-min-cut theorem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Ford_Fulkerson"}, "insert": "Ford-Fulkerson algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "Capacity_Scaling"}, "insert": "Capacity-Scaling algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Edmonds-Karp algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Applications_of_Flow_Networks"}, "insert": "Applications of Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Bipartite_Matchings"}, "insert": "Bipartite matchings"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Min-cost perfect matchings"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Hall's Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Circulations"}, "insert": "Circulations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Survey problems"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Programming"}, "insert": "Linear Programming"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Duality"}, "insert": "Duality, strong and weak"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Linear-algebraic interpretations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Solving LPs"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The Simplex method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Game_Theory"}, "insert": "Game Theory"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Nash equilibria"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The minimax and maximin values of a game"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#NP_Completeness"}, "insert": "NP-complete problems"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Reductions"}, "insert": "Reductions"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#SAT"}, "insert": "SAT"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#3SAT"}, "insert": "3SAT"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "The Cook-Levin Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Vertex Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Clique"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Independent Set"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Set Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#TSP"}, "insert": "Travelling Salesperson Problem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Approximation_Algorithms"}, "insert": "Approximation Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Combinatorial algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "LP-rounding algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Randomised algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Fixed_Parameter_Algorithms"}, "insert": "Fixed Parameter Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Bounded-Search-Tree algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Kernels"}, "insert": "Linear kernels"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "\n\n"}]}, "text": "Algorithms and Data Structures\n\nA real beast of a course. Covers the following topics in the following order:\n\n\n\n\nAmortised Analysis\nThe aggregate method\nThe accounting/banker's method\nThe potential function method\nDisjoint Sets\nNaive-array implementation\nLinked-list implementation\nDisjoint Forests\nLink-by-height\nPath compression\nLink-by-rank\nBinary Search Trees\nRed-Black trees\nSplay trees\nStatic Optimality and the Access Lemma\nFlow Networks\nDefinition of a flow and augmentations\nMax-flow-min-cut theorem\nFord-Fulkerson algorithm\nCapacity-Scaling algorithm\nEdmonds-Karp algorithm\nApplications of Flow Networks\nBipartite matchings\nMin-cost perfect matchings\nHall's Theorem\nCirculations\nSurvey problems\nLinear Programming\nDuality, strong and weak\nLinear-algebraic interpretations\nSolving LPs\nThe Simplex method\nGame Theory\nNash equilibria\nThe minimax and maximin values of a game\nNP-complete problems\nReductions\nSAT\n3SAT\nThe Cook-Levin Theorem\nVertex Cover\nClique\nIndependent Set\nSet Cover\nTravelling Salesperson Problem\nApproximation Algorithms\nCombinatorial algorithms\nLP-rounding algorithms\nRandomised algorithms\nFixed Parameter Algorithms\nBounded-Search-Tree algorithms\nLinear kernels\n\n\n\n\n\n", "updatedAt": 1714669409463}