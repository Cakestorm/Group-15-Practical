{"title": "Algorithms and Data Structures", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "Algorithms and Data Structures"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "A real "}, {"attributes": {"color": "#47a1b3"}, "insert": "beast "}, {"insert": "of a course. Covers the following topics in the following order:\n\n"}, {"attributes": {"link": "#Amortised_Analysis"}, "insert": "Amortised Analysis"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Aggregate"}, "insert": "The aggregate method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Accounting"}, "insert": "The accounting/banker's method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Potential"}, "insert": "The potential function method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Sets"}, "insert": "Disjoint Sets"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Naive_Array"}, "insert": "Naive-array implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linked_List_Implementation"}, "insert": "Linked-list implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Forests"}, "insert": "Disjoint Forests"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-height"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Path compression"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-rank"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Binary_Search_Trees"}, "insert": "Binary Search Trees"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Red_Black_Trees"}, "insert": "Red-Black trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Splay_Trees"}, "insert": "Splay trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Static_Optimality"}, "insert": "Static Optimality"}, {"insert": " and "}, {"attributes": {"link": "#Access_Lemma"}, "insert": "the Access Lemma"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Flow_Networks"}, "insert": "Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Definition of a flow and "}, {"attributes": {"link": "#c55dfae1-ca34-4e91-a8c1-d926712ab1b4"}, "insert": "augmentations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Max-flow-min-cut theorem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Ford_Fulkerson"}, "insert": "Ford-Fulkerson algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "Capacity_Scaling"}, "insert": "Capacity-Scaling algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Edmonds-Karp algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Applications_of_Flow_Networks"}, "insert": "Applications of Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Bipartite_Matchings"}, "insert": "Bipartite matchings"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Min-cost perfect matchings"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Hall's Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Circulations"}, "insert": "Circulations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Survey problems"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Programming"}, "insert": "Linear Programming"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Duality"}, "insert": "Duality, strong and weak"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Linear-algebraic interpretations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Solving LPs"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The Simplex method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Game_Theory"}, "insert": "Game Theory"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Nash equilibria"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The minimax and maximin values of a game"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#NP_Completeness"}, "insert": "NP-complete problems"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Reductions"}, "insert": "Reductions"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#SAT"}, "insert": "SAT"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#3SAT"}, "insert": "3SAT"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "The Cook-Levin Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Vertex Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Clique"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Independent Set"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Set Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#TSP"}, "insert": "Travelling Salesperson Problem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Approximation_Algorithms"}, "insert": "Approximation Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Combinatorial algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "LP-rounding algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Randomised algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Fixed_Parameter_Algorithms"}, "insert": "Fixed Parameter Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Bounded-Search-Tree algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Kernels"}, "insert": "Linear kernels"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "\n\n"}]}, "text": "Algorithms and Data Structures\n\nA real beast of a course. Covers the following topics in the following order:\n\n\n\n\nAmortised Analysis\nThe aggregate method\nThe accounting/banker's method\nThe potential function method\nDisjoint Sets\nNaive-array implementation\nLinked-list implementation\nDisjoint Forests\nLink-by-height\nPath compression\nLink-by-rank\nBinary Search Trees\nRed-Black trees\nSplay trees\nStatic Optimality and the Access Lemma\nFlow Networks\nDefinition of a flow and augmentations\nMax-flow-min-cut theorem\nFord-Fulkerson algorithm\nCapacity-Scaling algorithm\nEdmonds-Karp algorithm\nApplications of Flow Networks\nBipartite matchings\nMin-cost perfect matchings\nHall's Theorem\nCirculations\nSurvey problems\nLinear Programming\nDuality, strong and weak\nLinear-algebraic interpretations\nSolving LPs\nThe Simplex method\nGame Theory\nNash equilibria\nThe minimax and maximin values of a game\nNP-complete problems\nReductions\nSAT\n3SAT\nThe Cook-Levin Theorem\nVertex Cover\nClique\nIndependent Set\nSet Cover\nTravelling Salesperson Problem\nApproximation Algorithms\nCombinatorial algorithms\nLP-rounding algorithms\nRandomised algorithms\nFixed Parameter Algorithms\nBounded-Search-Tree algorithms\nLinear kernels\n\n\n\n\n\n", "updatedAt": 1714739987950, "embeddings": ["2.546434", "0.4928745", "0.0071256673", "0.50085914", "-0.01181977", "1.3602837", "0.9582601", "2.9397995", "-0.9760492", "-0.4949539", "0.15758838", "-0.8707866", "-0.3373524", "-1.733604", "-0.96509194", "1.3663914", "0.38212198", "-1.2177352", "0.2511901", "-1.6582092", "-1.3816105", "0.02621432", "0.14511637", "-0.048789203", "-1.0430752", "2.363529", "-2.6446962", "-0.09808619", "-0.08529877", "-0.3091245", "0.69864154", "0.7058717", "1.9421346", "1.127167", "-1.3509572", "-1.2049336", "-0.6382576", "-0.69887525", "1.2103475", "2.1656375", "-0.7584086", "-0.3167519", "1.3153224", "-1.5033135", "1.1084491", "0.24731027", "0.6093911", "-0.04499848", "-1.3412602", "0.006189606", "-0.2927217", "-1.65118", "0.27654788", "-2.4234037", "0.45083883", "0.5120267", "1.5347769", "3.2998607", "-0.98189825", "1.5512705", "0.583148", "-1.0015076", "-0.18625228", "1.6308705", "-0.5212398", "2.3454785", "-1.1229799", "-1.3679593", "-0.47452885", "0.003465867", "1.8082129", "-1.1250341", "0.43188184", "-0.6362025", "0.24323852", "-0.68367237", "1.168555", "0.4852449", "-0.008181782", "-1.3121469", "-1.7820336", "-0.26647386", "-1.0002862", "-0.48160115", "0.32629564", "-0.39642382", "1.8289404", "-1.268095", "-1.4545647", "-0.34258237", "0.45322976", "0.57247543", "2.4465616", "-1.5765343", "-0.10635575", "-0.1187807", "1.8454742", "0.176874", "1.6608492", "0.091818385", "0.050942004", "-0.81149644", "2.680155", "0.79497004", "-1.9767699", "0.40624145", "1.1092433", "-0.49626508", "-0.5059106", "-1.5365002", "-0.8773261", "1.6017956", "-0.07542457", "0.5063042", "-0.87939507", "0.7477835", "1.2144717", "-0.5949323", "-1.2180277", "1.9400833", "-0.4512068", "0.99642694", "-1.7367445", "1.0329341", "-3.386944", "0.2942655", "-2.8101041", "1.2918627", "-0.5830229", "2.2360775", "-0.011208733", "0.11820699", "0.7783945", "-0.42147523", "1.1265751", "2.847859", "-0.06239055", "1.7848325", "0.13476126", "-0.6534592", "-1.5069133", "0.31849366", "-1.4867196", "1.1822009", "-1.2453265", "0.9293474", "-1.4794279", "-0.10234607", "-0.4010603", "-0.0124469185", "-1.7723583", "0.38911173", "0.34110937", "-1.6448979", "-1.0243813", "1.6621977", "0.3644445", "0.69181895", "-0.8701689", "0.47534862", "-0.38496655", "1.1831547", "-0.4453798", "-1.0181783", "-1.3316958", "-0.28657168", "-0.7535027", "0.09617506", "-0.213323", "-0.5093888", "1.5259274", "0.20555899", "-0.53266346", "0.57235354", "2.7685869", "-0.34711123", "-1.525984", "0.63710266", "1.1376443", "0.65150136", "0.795604", "-0.0048255837", "1.5701016", "-0.86095583", "-0.687859", "-1.7020457", "-1.2424141", "-0.08725561", "-2.800851", "0.84254587", "0.09012042", "-1.0399137", "1.2922261", "0.09313197", "-0.981337", "0.1242841", "0.13548365", "1.0076476", "1.0354629", "0.4579597"]}