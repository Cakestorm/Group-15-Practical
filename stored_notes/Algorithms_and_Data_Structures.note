{"title": "Algorithms and Data Structures", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "Algorithms and Data Structures"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "A real "}, {"attributes": {"color": "#47a1b3"}, "insert": "beast "}, {"insert": "of a course. Covers the following topics in the following order:\n\n"}, {"attributes": {"link": "#Amortised_Analysis"}, "insert": "Amortised Analysis"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Aggregate"}, "insert": "The aggregate method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Accounting"}, "insert": "The accounting/banker's method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Potential"}, "insert": "The potential function method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Sets"}, "insert": "Disjoint Sets"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Naive_Array"}, "insert": "Naive-array implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linked_List_Implementation"}, "insert": "Linked-list implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Forests"}, "insert": "Disjoint Forests"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-height"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Path compression"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-rank"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Binary_Search_Trees"}, "insert": "Binary Search Trees"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Red_Black_Trees"}, "insert": "Red-Black trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Splay_Trees"}, "insert": "Splay trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Static_Optimality"}, "insert": "Static Optimality"}, {"insert": " and "}, {"attributes": {"link": "#Access_Lemma"}, "insert": "the Access Lemma"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Flow_Networks"}, "insert": "Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Definition of a flow and augmentations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Max-flow-min-cut theorem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Ford_Fulkerson"}, "insert": "Ford-Fulkerson algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "Capacity_Scaling"}, "insert": "Capacity-Scaling algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Edmonds-Karp algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Applications_of_Flow_Networks"}, "insert": "Applications of Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Bipartite_Matchings"}, "insert": "Bipartite matchings"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Min-cost perfect matchings"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Hall's Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Circulations"}, "insert": "Circulations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Survey problems"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Programming"}, "insert": "Linear Programming"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Duality"}, "insert": "Duality, strong and weak"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Linear-algebraic interpretations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Solving LPs"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The Simplex method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Game_Theory"}, "insert": "Game Theory"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Nash equilibria"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The minimax and maximin values of a game"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#NP_Completeness"}, "insert": "NP-complete problems"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Reductions"}, "insert": "Reductions"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#SAT"}, "insert": "SAT"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#3SAT"}, "insert": "3SAT"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "The Cook-Levin Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Vertex Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Clique"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Independent Set"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Set Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#TSP"}, "insert": "Travelling Salesperson Problem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Approximation_Algorithms"}, "insert": "Approximation Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Combinatorial algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "LP-rounding algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Randomised algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Fixed_Parameter_Algorithms"}, "insert": "Fixed Parameter Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Bounded-Search-Tree algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Kernels"}, "insert": "Linear kernels"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "\n\n"}]}, "text": "Algorithms and Data Structures\n\nA real beast of a course. Covers the following topics in the following order:\n\n\n\n\nAmortised Analysis\nThe aggregate method\nThe accounting/banker's method\nThe potential function method\nDisjoint Sets\nNaive-array implementation\nLinked-list implementation\nDisjoint Forests\nLink-by-height\nPath compression\nLink-by-rank\nBinary Search Trees\nRed-Black trees\nSplay trees\nStatic Optimality and the Access Lemma\nFlow Networks\nDefinition of a flow and augmentations\nMax-flow-min-cut theorem\nFord-Fulkerson algorithm\nCapacity-Scaling algorithm\nEdmonds-Karp algorithm\nApplications of Flow Networks\nBipartite matchings\nMin-cost perfect matchings\nHall's Theorem\nCirculations\nSurvey problems\nLinear Programming\nDuality, strong and weak\nLinear-algebraic interpretations\nSolving LPs\nThe Simplex method\nGame Theory\nNash equilibria\nThe minimax and maximin values of a game\nNP-complete problems\nReductions\nSAT\n3SAT\nThe Cook-Levin Theorem\nVertex Cover\nClique\nIndependent Set\nSet Cover\nTravelling Salesperson Problem\nApproximation Algorithms\nCombinatorial algorithms\nLP-rounding algorithms\nRandomised algorithms\nFixed Parameter Algorithms\nBounded-Search-Tree algorithms\nLinear kernels\n\n\n\n\n\n", "updatedAt": 1714669409463, "embeddings": ["2.6669426", "0.5399482", "0.09370073", "0.43349", "-0.60172516", "0.9648291", "0.84693336", "2.9094212", "-0.9789737", "-0.36360204", "0.53016967", "-1.2687465", "-0.2558324", "-1.1686717", "-1.1373295", "1.5508919", "0.329495", "-1.2867103", "-0.0039059895", "-1.068005", "-1.5397369", "0.11671377", "0.037070334", "-0.31586054", "-0.82436323", "2.5660067", "-2.2045796", "-0.053321507", "0.01893126", "-0.4098977", "0.66867876", "0.438349", "1.6278447", "0.9276534", "-0.9377135", "-1.0750183", "-0.29174653", "-0.5038671", "1.0550766", "2.0473168", "-1.2222909", "-0.215062", "1.1603129", "-1.3152349", "1.072056", "-0.05518465", "0.7131437", "-0.38249177", "-1.2089912", "0.39048994", "-0.3494813", "-1.4964586", "0.111652635", "-2.368592", "0.28241807", "0.68814945", "1.7328155", "3.318951", "-0.8090961", "1.400097", "0.4525155", "-0.97708535", "-0.07231424", "1.5586208", "-0.48897386", "2.266916", "-1.1122313", "-1.0484052", "-0.4232499", "-0.10651143", "1.7637172", "-1.3802878", "0.4240761", "-0.549249", "0.26473647", "-0.5316305", "1.0712526", "0.72428906", "-0.14905956", "-1.1199329", "-1.7665508", "-0.45973617", "-0.82325685", "-0.21068993", "0.15292342", "-0.44536024", "1.9421114", "-1.3978412", "-1.0976462", "-0.34744394", "0.5853196", "0.5417961", "2.5128238", "-1.5952566", "-0.48212525", "-0.25223908", "1.7974942", "0.06747757", "1.3260013", "0.29725975", "0.024707805", "-1.1601728", "2.070437", "0.35628256", "-1.8375894", "0.38994196", "0.89591485", "-0.38411716", "-0.98378956", "-1.2421216", "-0.6702023", "1.9064754", "0.14263377", "0.71457386", "-0.49181446", "0.5767603", "0.9106674", "-0.54249537", "-0.8965978", "1.901885", "-0.9112422", "1.015529", "-1.2531874", "0.95100313", "-2.963049", "0.5015617", "-2.1480281", "0.85112447", "-0.74107796", "2.3438592", "0.02574389", "0.048252672", "0.9351991", "-0.4880002", "1.1825496", "3.15482", "-0.43039566", "1.5809635", "-0.50066817", "-0.2029661", "-1.4692628", "0.7004309", "-1.6101568", "0.82946056", "-0.46175358", "0.7680829", "-1.2794776", "-0.38193", "0.0035922544", "0.28679588", "-1.3447409", "-0.016818276", "0.29083842", "-1.2975718", "-0.70943356", "1.4025481", "0.41684213", "0.993121", "-0.5863307", "0.34854236", "-0.8096461", "1.0974311", "-0.48832297", "-0.588457", "-1.1991134", "0.002984855", "-1.0655738", "-0.23703867", "-0.46715003", "-0.24213032", "1.3076527", "0.23460923", "-0.840742", "0.8836275", "2.3263724", "-0.13894437", "-1.7656908", "0.24628781", "0.8025039", "0.28447783", "0.516217", "0.14148341", "1.5880302", "-0.40597054", "-1.1718633", "-1.6756086", "-0.9858836", "0.40215695", "-2.7876828", "0.9784762", "0.4447023", "-0.5114614", "0.82598543", "-0.1538318", "-0.44744742", "-0.36933032", "0.25550467", "0.80937445", "0.40415588", "0.5424404"]}