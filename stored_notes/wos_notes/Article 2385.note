{"title": "Article 2385", "body": {"ops": [{"insert": "Recently, graph-based dimensionality reduction methods have attracted much attention due to their widely applications in many practical tasks such as image classification and data clustering. However, an inappropriate graph which cannot accurately reflect the underlying structure and distribution of input data will dramatically deteriorate the performances of these methods. In this paper, we propose a novel algorithm termed Locality Constrained Graph Optimization Dimensionality Reduction (LC-GODR) to address the limitations of existing graph-based dimensionality reduction methods. Firstly, unlike most graph-based dimensionality reduction methods in which the graphs are constructed in advance and kept unchanged during dimensionality reduction, our LC-GODR combines the graph optimization and projection matrix learning into a joint framework. Therefore, the graph in the proposed algorithm can be adaptively updated during the procedure of dimensionality reduction. Secondly, through introducing the locality constraints into our LC-GODR, the local information of high-dimensional input data can be discovered and well preserved, which makes the proposed algorithm distinct from other graph optimization based dimensionality reduction methods. Moreover, an effective updating scheme is also provided to solve the proposed LC-GODR. Extensive experiments on two UCI and five image databases are conducted to demonstrate the effectiveness of our algorithm. The experimental results indicate that the proposed LC-GODR outperforms other related methods. (C) 2017 Elsevier B.V. All rights reserved.\n"}]}, "text": "Recently, graph-based dimensionality reduction methods have attracted much attention due to their widely applications in many practical tasks such as image classification and data clustering. However, an inappropriate graph which cannot accurately reflect the underlying structure and distribution of input data will dramatically deteriorate the performances of these methods. In this paper, we propose a novel algorithm termed Locality Constrained Graph Optimization Dimensionality Reduction (LC-GODR) to address the limitations of existing graph-based dimensionality reduction methods. Firstly, unlike most graph-based dimensionality reduction methods in which the graphs are constructed in advance and kept unchanged during dimensionality reduction, our LC-GODR combines the graph optimization and projection matrix learning into a joint framework. Therefore, the graph in the proposed algorithm can be adaptively updated during the procedure of dimensionality reduction. Secondly, through introducing the locality constraints into our LC-GODR, the local information of high-dimensional input data can be discovered and well preserved, which makes the proposed algorithm distinct from other graph optimization based dimensionality reduction methods. Moreover, an effective updating scheme is also provided to solve the proposed LC-GODR. Extensive experiments on two UCI and five image databases are conducted to demonstrate the effectiveness of our algorithm. The experimental results indicate that the proposed LC-GODR outperforms other related methods. (C) 2017 Elsevier B.V. All rights reserved.\n", "updatedAt": 1714670437, "embeddings": ["1.2632502", "-0.89564145", "0.207202", "-0.26241913", "-0.44459233", "-0.34887633", "0.3520252", "1.1277543", "0.4745647", "-0.9846273", "0.035841525", "-1.0125927", "0.34252194", "0.05762467", "-1.1427909", "0.7556385", "1.6575679", "0.082297176", "0.1922335", "0.27026737", "0.8118327", "-0.054663908", "0.1612383", "0.2523792", "-1.2875252", "1.3556583", "0.3796864", "0.6406575", "1.034641", "-1.1088371", "1.1511589", "0.39477694", "0.7141211", "-0.47194773", "-0.7549691", "-0.68410015", "-0.6212776", "0.5799334", "-0.7413622", "0.59827316", "-0.4675881", "0.9185133", "-0.6081833", "-0.20538092", "1.0099013", "-1.0660653", "0.36025617", "-1.0623095", "-0.45023614", "-0.5626107", "-0.47771057", "-0.80731624", "1.154768", "-1.0477087", "-0.77985287", "-0.6739755", "0.40639973", "-0.4070782", "-0.99430066", "0.248301", "1.0969136", "-0.23062554", "0.67811507", "-0.6891369", "0.7577807", "0.062591314", "0.4419093", "1.5329095", "-0.8006396", "0.41195074", "-0.14190324", "-1.0209907", "0.21742329", "0.74455994", "0.18350509", "0.7242898", "-0.60256505", "-1.894588", "0.83889365", "-0.12058961", "0.021927798", "-0.27341336", "-1.0548278", "0.5775967", "-1.187291", "0.013066119", "-0.46235287", "0.5173704", "-0.06833565", "0.7043333", "1.3010176", "0.32223722", "1.0092181", "0.74139357", "-0.23096758", "0.44599578", "0.6409345", "0.9521215", "-0.4002161", "0.8130834", "-0.216463", "0.6254399", "-0.24735838", "-0.15543641", "0.67545605", "-0.8023486", "0.9064526", "-0.92907", "0.3856737", "-1.0297056", "0.47754994", "-1.3583354", "-0.23679973", "-0.05151549", "-0.68351024", "-0.6585482", "-0.794751", "-2.0838096", "0.063247845", "0.026560027", "-0.95405996", "0.5869168", "0.05480635", "-0.1328265", "0.5248624", "1.064668", "0.6875861", "0.06546683", "-0.5742886", "-0.23698787", "0.13330065", "0.3998509", "0.5171096", "1.1546156", "0.8903385", "1.3899546", "-0.027402824", "-0.20968682", "1.6409122", "0.13135317", "1.1526024", "-0.55125487", "-0.97578543", "-0.6117151", "-1.6652365", "-0.40730053", "-0.993314", "0.550808", "-0.19121437", "-0.5285274", "1.2927357", "-0.045753624", "-0.9326056", "-0.8459419", "-0.6261429", "0.071159616", "0.29952306", "-0.026888922", "-0.41161662", "-0.059856478", "-0.20846991", "-0.62509376", "0.06837444", "0.24611333", "0.14310303", "1.4620454", "-0.33892292", "-0.69434357", "0.26626667", "-0.7197329", "0.4822393", "1.1316051", "-0.22849596", "-0.12183262", "1.0722762", "-0.060025014", "-0.21056166", "-0.080745354", "0.1701011", "1.2526454", "-0.14995325", "1.0743256", "0.097534046", "0.20085675", "0.006008737", "-0.001443577", "-0.20771758", "0.62061757", "1.9017082", "1.0052485", "-0.90907145", "-1.889691", "-0.61674196", "-1.2947195", "-0.3621189", "0.38388115", "0.7524974", "-2.4024518", "0.12135273", "-0.28142476"]}