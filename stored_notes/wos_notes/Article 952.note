{"title": "Article 952", "body": {"ops": [{"insert": "Smart meters play vital roles in the aspects of the management and operation of smart grids such as demand response, energy efficiency improvement, and electricity pricing. Massive amounts of data are being collected owing to the popularity of smart meters. Two main issues should be addressed in this context. One is the communication and storage of big data from smart meters at reduced cost. The other is the effective extraction of useful information from this massive dataset. In this paper, the K-SVD sparse representation technique, which includes two phases (dictionary learning and sparse coding), is used to decompose load profiles into linear combinations of several partial usage patterns (PUPs), which allows the smart meter data to be compressed and hidden electricity consumption patterns to be extracted. Then, a linear support vector machine (SVM) based method is used to classify the load profiles into two groups, residential customers and small and medium-sized enterprises (SMEs), based on the extracted patterns. Comprehensive comparisons with the results of k-means clustering, the discrete wavelet transform (DWT), principal component analysis (PCA), and piecewise aggregate approximation (PAA) are conducted on real datasets in Ireland. The results show that our proposed technique outperforms these methods in both compression ratio and classification accuracy.\n"}]}, "text": "Smart meters play vital roles in the aspects of the management and operation of smart grids such as demand response, energy efficiency improvement, and electricity pricing. Massive amounts of data are being collected owing to the popularity of smart meters. Two main issues should be addressed in this context. One is the communication and storage of big data from smart meters at reduced cost. The other is the effective extraction of useful information from this massive dataset. In this paper, the K-SVD sparse representation technique, which includes two phases (dictionary learning and sparse coding), is used to decompose load profiles into linear combinations of several partial usage patterns (PUPs), which allows the smart meter data to be compressed and hidden electricity consumption patterns to be extracted. Then, a linear support vector machine (SVM) based method is used to classify the load profiles into two groups, residential customers and small and medium-sized enterprises (SMEs), based on the extracted patterns. Comprehensive comparisons with the results of k-means clustering, the discrete wavelet transform (DWT), principal component analysis (PCA), and piecewise aggregate approximation (PAA) are conducted on real datasets in Ireland. The results show that our proposed technique outperforms these methods in both compression ratio and classification accuracy.\n", "updatedAt": 1714680235, "embeddings": ["0.5561876", "0.02964123", "1.8498406", "-0.83573174", "-0.17003933", "-0.5122335", "-0.09980436", "1.5374023", "-1.1740978", "-0.2305147", "0.1210955", "0.39381063", "-1.2130957", "-0.90456796", "-0.4110892", "-0.8677558", "0.2263897", "-1.0197738", "-1.1047623", "-1.2331827", "-1.3049248", "-0.30383885", "0.30361548", "0.36485097", "1.4649042", "-0.37083498", "-0.9093712", "-0.2679187", "-1.6316152", "-0.05616215", "0.55298346", "-0.3208929", "0.69251794", "1.4376175", "-1.7541056", "-0.17775545", "-0.7942244", "-0.7076668", "1.5508584", "0.0026716667", "0.53215724", "-0.1212712", "0.026711669", "-0.61759216", "0.40601864", "-0.47529346", "-0.0639716", "0.9279153", "-0.66601044", "-0.48764816", "-0.16507079", "-1.4192554", "1.0606388", "-0.41787755", "1.0293571", "-1.2500426", "0.5647614", "-0.30899626", "-2.0886605", "0.3928252", "-0.30658183", "0.5468337", "0.27483347", "-0.8443076", "-0.8914039", "0.483185", "-0.090112254", "-0.442042", "-0.5838064", "1.3415848", "0.09936953", "-0.22772777", "1.180734", "-0.56108105", "-0.29530457", "0.47171625", "-0.13970679", "0.32938686", "0.6257003", "0.34432435", "0.8576929", "1.0364606", "0.73475814", "0.26634878", "-0.9151166", "-0.6336", "0.89446133", "-0.0689652", "-0.7234524", "-0.083932064", "0.9475138", "0.6218318", "1.8853666", "0.63152134", "0.9486703", "-0.86552596", "-0.5918986", "-0.60856247", "1.139198", "0.25930798", "-1.3081816", "-1.2331403", "-1.1230347", "-0.87775", "-1.3064036", "-0.9447374", "1.1042601", "2.3370986", "0.4125873", "0.16323964", "-0.5451428", "-0.100243606", "0.013401871", "1.5089983", "0.68175846", "0.7082876", "2.0069118", "-0.4614405", "-0.4700413", "0.8855614", "-0.008513032", "1.5257603", "-0.7768825", "0.26417997", "0.32933286", "0.5313747", "-1.2419451", "0.029364364", "1.8128978", "0.4048034", "0.92472446", "-0.19004585", "-0.52062094", "0.2538648", "0.54623854", "1.1081654", "-0.21753387", "0.51033753", "1.6873487", "0.079877846", "0.13869287", "0.012333386", "-0.3704914", "-0.23843247", "0.24634911", "1.3091837", "-1.0589681", "1.5875418", "0.6839898", "0.11050512", "0.10892421", "0.6937837", "-0.29781553", "0.5837341", "0.5245259", "1.4831119", "-1.1479913", "0.35608783", "-1.640122", "1.4417566", "-0.3553996", "0.22130577", "1.2431666", "0.6364391", "0.079662316", "-1.0446283", "-0.6611567", "0.08251115", "-0.4238837", "0.4783429", "2.1076279", "-1.7724726", "1.6666222", "-0.13382173", "1.45743", "-0.17503332", "0.39080977", "-0.98522246", "1.2640455", "-0.27572113", "0.1366494", "0.6703865", "0.6234885", "-0.07782435", "0.75909656", "-0.588693", "-0.71399516", "0.41943482", "0.12660226", "-0.6609996", "2.163703", "0.57481617", "0.6992612", "0.46573973", "-1.4296068", "-0.59321815", "1.5529888", "-0.6777728", "-0.8715196", "0.31273627"]}