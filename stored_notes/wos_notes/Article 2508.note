{"title": "Article 2508", "body": {"ops": [{"insert": "Time-domain simulations are heavily used in today's planning and operation practices to assess power system transient stability, posttransient voltage/frequency profiles as well as oscillatory behavior following severe contingencies to comply with industry standards. Because of the increased modeling complexity, it is many times slower than real time for state-of-the-art commercial software packages to complete a dynamic simulation for a large-scale model. With the growing stochastic behavior introduced by emerging technologies, power industry has seen a growing need for performing security assessment in real time. This paper presents an innovative parallel implementation framework to speed up a single dynamic simulation by leveraging the existing stability model library in commercial tools through their application programming interfaces (APIs). Several high performance computing (HPC) techniques are explored and implemented such as parallelizing the calculation of generator current injection, identifying fast linear solvers for network solution, and parallelizing data outputs when interacting with APIs in the commercial package, TSAT. The proposed method has been tested on a Western Electricity Coordinating Council (WECC) planning base case with detailed synchronous generator models and it exhibits outstanding scalable performance with sufficient accuracy.\n"}]}, "text": "Time-domain simulations are heavily used in today's planning and operation practices to assess power system transient stability, posttransient voltage/frequency profiles as well as oscillatory behavior following severe contingencies to comply with industry standards. Because of the increased modeling complexity, it is many times slower than real time for state-of-the-art commercial software packages to complete a dynamic simulation for a large-scale model. With the growing stochastic behavior introduced by emerging technologies, power industry has seen a growing need for performing security assessment in real time. This paper presents an innovative parallel implementation framework to speed up a single dynamic simulation by leveraging the existing stability model library in commercial tools through their application programming interfaces (APIs). Several high performance computing (HPC) techniques are explored and implemented such as parallelizing the calculation of generator current injection, identifying fast linear solvers for network solution, and parallelizing data outputs when interacting with APIs in the commercial package, TSAT. The proposed method has been tested on a Western Electricity Coordinating Council (WECC) planning base case with detailed synchronous generator models and it exhibits outstanding scalable performance with sufficient accuracy.\n", "updatedAt": 1714670437, "embeddings": ["1.0633171", "-0.78750473", "0.040016796", "-0.33691567", "-0.20331876", "-0.350228", "0.684143", "1.2896507", "0.43559578", "-1.0218674", "-0.0880634", "-0.93726176", "0.22434843", "-0.08659995", "-1.3212634", "0.60822743", "1.7218201", "0.112001814", "0.15317309", "0.29564536", "0.7140799", "-0.03664425", "0.3419528", "0.40866536", "-1.3574686", "1.4093807", "0.45532343", "0.7947633", "1.0503724", "-0.7745073", "1.2038106", "0.6704682", "0.5834197", "-0.3713125", "-0.8381064", "-0.7653114", "-0.7733227", "0.75197965", "-0.6111238", "0.6386354", "-0.81594974", "0.90774584", "-0.6750004", "-0.5030409", "1.1054418", "-0.96428204", "0.40995955", "-1.3770373", "-0.16589007", "-0.7653477", "-0.3105444", "-0.745314", "1.3040944", "-1.303919", "-0.38134256", "-0.7040452", "0.17453173", "-0.45630145", "-1.1035846", "0.20199428", "1.0172619", "-0.49182832", "0.8498707", "-1.0778079", "0.8114786", "0.17157665", "0.584147", "1.4299364", "-0.82940644", "0.3242458", "-0.19365877", "-1.1536621", "0.06747212", "0.36832276", "0.1575931", "0.6241971", "-0.53825265", "-1.8359059", "0.7564908", "-0.0016780983", "-0.23718722", "-0.13893794", "-1.0336627", "0.52097285", "-1.2419784", "0.039760422", "-0.33376986", "0.522686", "-0.19700208", "0.5696621", "1.1661466", "0.54662746", "0.9073935", "0.9198493", "-0.028618041", "0.21274306", "0.75080216", "0.7165008", "-0.41611066", "0.8638791", "-0.369215", "0.7149489", "-0.17328927", "-0.043163784", "0.6392405", "-0.9616445", "0.6539681", "-0.9637078", "0.37498075", "-1.2809752", "0.7848469", "-1.2301923", "-0.52621627", "0.016043317", "-0.7333587", "-0.9100384", "-0.81821936", "-1.9201529", "0.08996292", "0.17918178", "-0.6139848", "0.61945766", "0.25117", "-0.024097726", "0.74533355", "1.0659348", "0.5100415", "-0.14842975", "-0.9866787", "-0.17252533", "-0.032977674", "0.55223465", "1.0165237", "0.9609188", "0.81585115", "1.5321139", "0.34601063", "-0.26783487", "1.7071763", "-0.21629897", "1.0044862", "-0.5217605", "-1.1561099", "-0.5755782", "-1.7301246", "-0.5445469", "-1.2228812", "0.45613566", "-0.2420622", "-0.36619747", "1.1432794", "-0.04964127", "-0.7819715", "-0.7963014", "-0.44195178", "-0.011553196", "0.33458108", "0.13710582", "-0.42847303", "0.04737275", "-0.27270728", "-0.87961715", "0.02075951", "-0.009692008", "-0.062049143", "1.7644181", "-0.442833", "-0.46946394", "0.44376147", "-0.5906652", "0.24047245", "1.2061852", "0.022237258", "0.055067595", "0.9920443", "0.052678958", "-0.15290007", "-0.021987721", "0.05799881", "1.094037", "0.00025357798", "1.0150099", "0.32267672", "0.41895774", "0.13070889", "0.087242074", "-0.5209216", "0.5591174", "1.8464931", "1.0455853", "-0.80682635", "-1.9079643", "-0.6252944", "-1.330772", "-0.18702388", "0.2608828", "0.6671458", "-2.1897194", "0.14774224", "-0.41492617"]}