{"title": "Article 429", "body": "Analog layout generation in the advanced CMOS design is challenging by its increasing layout constraints and performance requirements. This situation becomes more intricate by the growing parasitic variability and manufacturing reliability. To facilitate the feasibility of template-based layout migration, this paper first introduces a layout preservation, which extracts placement and routing behaviors from an existing layout into a crossing graph via constrained Delaunay triangulation. And later this crossing graph can be migrated into multiple layouts with placement and routing reconnection. The proposed approach also provides a refinement for wire to optimize the performance metrics. This approach is applied to a variable-gain amplifier, a folded-cascode operational amplifier, and a low dropout regulator. The experimental results demonstrate more possibility on layout migration, such that averagely more than 75% routing of migrated layout is generated by our approach. Additionally, it exhibits the productivity with qualified performance on different designs.\n", "text": "Analog layout generation in the advanced CMOS design is challenging by its increasing layout constraints and performance requirements. This situation becomes more intricate by the growing parasitic variability and manufacturing reliability. To facilitate the feasibility of template-based layout migration, this paper first introduces a layout preservation, which extracts placement and routing behaviors from an existing layout into a crossing graph via constrained Delaunay triangulation. And later this crossing graph can be migrated into multiple layouts with placement and routing reconnection. The proposed approach also provides a refinement for wire to optimize the performance metrics. This approach is applied to a variable-gain amplifier, a folded-cascode operational amplifier, and a low dropout regulator. The experimental results demonstrate more possibility on layout migration, such that averagely more than 75% routing of migrated layout is generated by our approach. Additionally, it exhibits the productivity with qualified performance on different designs.\n", "updatedAt": 1714646227, "embeddings": ["1.2553672", "-0.3942614", "-0.47356233", "1.4074141", "-0.21999474", "-0.9934034", "0.94347084", "0.79685867", "-1.5542107", "1.5236475", "-0.7528449", "-1.1864446", "0.0104875", "1.0261331", "-1.9353979", "-0.5622627", "-1.2108095", "0.06064076", "-1.4190818", "-0.50742763", "0.12227287", "-2.4734085", "0.20221119", "-1.4822892", "-0.45176223", "-0.35370368", "1.5595561", "-1.4522166", "-1.5224805", "-0.68785673", "-0.16581185", "0.49347773", "0.76681095", "0.5778327", "-0.601929", "-0.17550486", "-1.3972442", "-0.27808747", "0.29713634", "-0.3725595", "0.0425525", "-0.8029632", "-0.4291584", "-1.9588833", "0.8211107", "-0.68619895", "-0.86586374", "0.46169114", "-0.06231539", "-0.46599787", "-0.5596037", "-0.12285284", "1.0754791", "-0.4725556", "0.17068493", "-0.15350299", "-0.4643736", "-1.0629838", "0.055154845", "0.7401849", "1.2255877", "0.6608841", "0.09618276", "0.38804972", "-1.875169", "1.1091713", "0.5572021", "0.74482787", "-0.2589025", "-0.3846629", "-0.099607445", "0.9290012", "1.8243389", "-0.0046185497", "-0.2516415", "1.2862041", "0.35471863", "-0.42688626", "0.4949914", "-0.36248487", "-0.1630944", "-1.538779", "-1.38972", "0.22151946", "-0.39975634", "0.116197236", "0.9370167", "0.5314494", "-0.37392735", "-0.52092946", "0.7159922", "1.2515539", "1.1384957", "0.3258522", "0.4043774", "0.5915345", "-1.3270042", "-0.6336003", "0.7740187", "1.0717084", "0.14950737", "0.18531944", "0.37274492", "0.0705457", "-0.6656234", "0.40946215", "0.3365034", "0.13901694", "0.28911316", "1.1919614", "-1.2742304", "-0.30213863", "0.20739259", "0.37605026", "0.10838456", "-0.24907997", "-0.401982", "-0.534151", "0.5606796", "-0.827042", "0.19346195", "1.0609303", "-0.8401608", "-0.37721488", "-0.3177156", "0.579606", "-1.3384358", "0.6411452", "-1.0516341", "-0.034230813", "1.6917241", "-0.09873285", "0.20160647", "1.2573848", "0.447462", "0.74874955", "0.15732048", "-0.78831434", "-0.17094468", "0.67735565", "-0.7083131", "-0.6585927", "-0.73882806", "0.38139966", "-0.4201063", "0.8971562", "-0.29657313", "0.8043275", "0.5374422", "0.01492739", "-0.087261714", "0.32005844", "0.5751461", "-0.8319828", "1.3278518", "-0.46412674", "0.059650414", "1.6280911", "-0.22910751", "1.0014075", "-0.46353042", "0.12995134", "0.12927765", "0.45846203", "0.57258874", "-0.96687424", "0.34420955", "-0.16906317", "-0.97486806", "0.95060074", "0.9192844", "-0.098886944", "0.16912371", "-0.6390925", "-0.018929712", "-1.3741965", "-0.41785818", "0.2516977", "-0.39399368", "-0.5985189", "0.033722747", "-0.576114", "0.25036153", "-0.40717533", "0.60627425", "0.027500054", "1.1913345", "-0.59346557", "0.7230182", "-0.22588256", "-0.33254766", "0.8638668", "0.08658534", "-0.8581596", "-0.1599827", "0.1181523", "0.6759287", "-0.8458013", "-1.1753385", "-0.023235174"]}