{"body": "In this paper, a hybrid population based metaheuristic search algorithm named as gravitational search algorithm (GSA) combined with particle swarm optimization (PSO) (GSA-PSO) is proposed for the optimal designs of two commonly used analog circuits, namely, complementary metal oxide semiconductor (CMOS) differential amplifier circuit with current mirror load and CMOS two-stage operational amplifier circuit. PSO and GSA are simple, population based robust evolutionary algorithms but have the problem of suboptimality, individually. The proposed GSA-PSO based approach has overcome this disadvantage faced by both the PSO and the GSA algorithms and is employed in this paper for the optimal designs of two amplifier circuits. The transistors' sizes are optimized using GSA-PSO in order to minimize the areas occupied by the circuits and to improve the design/performance parameters of the circuits. Various design specifications/performance parameters are optimized to optimize the transistor's sizes and some other design parameters using GSA-PSO. By using the optimal transistor sizes, Simulation Program with Integrated Circuit Emphasis simulation has been carried out in order to show the performance parameters. The simulation results justify the superiority of GSA-PSO over differential evolution, harmony search, artificial bee colony and PSO in terms of convergence speed, design specifications and performance parameters of the optimal design of the analog CMOS amplifier circuits. It is shown that GSA-PSO based design technique for each amplifier circuit yields the least MOS area, and each designed circuit is shown to have the best performance parameters like gain, power dissipation etc., as compared with those of other recently reported literature. Still the difficulties and challenges faced in this work are proper tuning of control parameters of the algorithms GSA and PSO, some conflicting design/performance parameters and design specifications, which have been partially overcome by repeated manual tuning. Multiobjective optimization may be the proper alternative way to overcome the above difficulties.\n", "embeddings": ["-0.16637444", "-0.14839204", "0.44586375", "0.91654426", "-0.6489748", "0.8525652", "1.5662599", "1.8555285", "-1.4353313", "0.23263897", "-1.8013632", "-1.9217033", "-0.12956849", "0.08768068", "-1.5581362", "0.4100959", "-0.57407475", "-1.1086813", "0.4238935", "-1.221781", "1.0137414", "-3.2028656", "1.2103621", "0.37373394", "-0.13800445", "-0.88501", "1.1654528", "-1.0156488", "-1.7175019", "-0.68334323", "1.1251391", "0.27310637", "-0.7855942", "1.4841301", "0.9791751", "-0.1525699", "0.5296276", "-1.5385945", "0.69748574", "-0.48915753", "-0.71564", "-1.4300729", "-0.2774696", "-0.45967558", "-1.0120159", "-1.7639524", "-1.4373499", "-1.1200551", "-0.8372608", "-0.20246977", "-1.489126", "0.5772469", "0.7988323", "-1.4827157", "0.59975904", "0.64344615", "-0.116687156", "-1.4401218", "1.5108747", "-0.1820088", "-1.496157", "1.0944331", "0.81655735", "-0.007916251", "-1.6725327", "2.2496204", "1.2843412", "0.80148655", "-0.5566876", "1.0084908", "-2.5847719", "-2.0099304", "0.4048572", "0.19734952", "1.1673207", "1.2464269", "1.950962", "0.039266832", "0.4079228", "-1.2399435", "-0.030861763", "-0.806126", "-0.45285478", "1.4720607", "-0.9266344", "0.31162483", "1.2797295", "-0.36701137", "0.37251654", "1.4893438", "1.1523625", "0.6532231", "1.2869781", "-1.4129874", "-1.4527249", "2.0584216", "-0.08814249", "0.24935803", "1.8062274", "0.0467369", "0.9128252", "-0.27335352", "1.9956782", "1.2275926", "0.5955323", "-0.92163503", "1.1952975", "-0.2342847", "-0.19634047", "0.27992007", "-0.6929323", "0.97033036", "0.17045544", "-1.7105969", "-0.45177838", "-1.3630425", "0.7507123", "-0.08746577", "-1.4146618", "-1.4078995", "-0.3016098", "-0.36717743", "-0.74400216", "0.1798665", "-0.23099366", "-0.14234975", "-1.1340908", "0.9649266", "0.45147905", "1.3522185", "1.6842297", "0.80828303", "0.020891424", "0.7668688", "-0.14472456", "0.39627185", "0.3041694", "0.2233695", "-0.36826006", "0.28564495", "-0.30907598", "0.7917235", "-1.6553844", "0.55524397", "-0.93329465", "-0.24106698", "0.15862282", "-0.843976", "1.6909589", "0.6953893", "-0.04599041", "-0.6202469", "-0.06338804", "-0.45042533", "-0.5502268", "1.0718845", "-1.2596877", "1.8721617", "-0.17719245", "0.3111175", "0.93662745", "0.34045967", "-0.10168997", "-1.2702013", "0.6941699", "-0.22905456", "0.77516204", "0.52061653", "-0.13285969", "0.8130293", "1.0833559", "-0.058548722", "1.5654175", "1.5982885", "1.0093956", "0.4313857", "-0.8603164", "0.345409", "0.08116828", "-0.5306055", "-0.1266308", "0.7484765", "0.91941965", "-0.7113318", "-0.07764263", "0.88096035", "1.066016", "-0.612848", "2.0180182", "-0.051775377", "0.21526122", "0.44541264", "-0.009180726", "-1.1875883", "-0.54017", "-1.6986095", "0.54995245", "-0.21490273", "-1.6061445", "-0.10556764"]}