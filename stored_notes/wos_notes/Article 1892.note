{"title": "Article 1892", "body": {"ops": [{"insert": "In recent years, compressed sensing has received considerable attention from the signal processing community because of its ability to represent sparse signals with a number of samples much less than that is required by the Nyquist sampling theorem. -minimization is a powerful tool for sparse signal reconstruction from few measured samples, but its computational complexity is a burden for real applications. Recently, a number of greedy algorithms based on orthogonal matching pursuit (OMP) have been proposed, and they have near -minimization performance with much less processing time. In this work, a new OMP-type two-stage sparse signal reconstruction algorithm, namely data-driven forward-backward pursuit (DD-FBP), is proposed. It is based on a former work called forward-backward pursuit (FBP). DD-FBP iteratively expands and shrinks the estimated support set, and these constitute the forward and backward stages. In DD-FBP, unlike FBP, the forward and backward step sizes are not constants, but they are dependent on the correlation and projection values, respectively, which are calculated in each iteration. The recovery performance by using noiseless and noisy sparse signal ensembles, as well as a natural sparse image, indicates that DD-FBP surpasses the other methods in terms of success rate and processing time.\n"}]}, "text": "In recent years, compressed sensing has received considerable attention from the signal processing community because of its ability to represent sparse signals with a number of samples much less than that is required by the Nyquist sampling theorem. -minimization is a powerful tool for sparse signal reconstruction from few measured samples, but its computational complexity is a burden for real applications. Recently, a number of greedy algorithms based on orthogonal matching pursuit (OMP) have been proposed, and they have near -minimization performance with much less processing time. In this work, a new OMP-type two-stage sparse signal reconstruction algorithm, namely data-driven forward-backward pursuit (DD-FBP), is proposed. It is based on a former work called forward-backward pursuit (FBP). DD-FBP iteratively expands and shrinks the estimated support set, and these constitute the forward and backward stages. In DD-FBP, unlike FBP, the forward and backward step sizes are not constants, but they are dependent on the correlation and projection values, respectively, which are calculated in each iteration. The recovery performance by using noiseless and noisy sparse signal ensembles, as well as a natural sparse image, indicates that DD-FBP surpasses the other methods in terms of success rate and processing time.\n", "updatedAt": 1714670437, "embeddings": ["1.1913049", "-0.79460984", "0.041739896", "-0.13559797", "-0.3916996", "-0.35599536", "0.56528014", "1.3073654", "0.565694", "-1.1681504", "-0.026114814", "-0.9961164", "0.26688266", "0.053382773", "-1.2260162", "0.67048675", "1.6420481", "-0.026859254", "-0.028429588", "0.33934826", "0.6971305", "0.011850605", "0.34891656", "0.27742976", "-1.2400949", "1.6610768", "0.36208698", "0.9375916", "1.2730168", "-0.7430177", "1.088111", "0.51060057", "0.6227766", "-0.58213353", "-0.724942", "-0.83820605", "-0.75623626", "0.81403387", "-0.63319534", "0.5829213", "-0.7278208", "0.79428375", "-0.7537758", "-0.5021168", "1.1423928", "-0.9915994", "0.42285123", "-1.4048247", "-0.045122016", "-0.6719964", "-0.31838986", "-0.64091355", "1.2997", "-1.163067", "-0.42802295", "-0.79468936", "0.044235222", "-0.25710437", "-0.79001004", "0.13149723", "0.8988143", "-0.3541725", "0.70046514", "-0.9012417", "0.9272937", "0.077805005", "0.4297458", "1.7002448", "-0.82941335", "0.1572162", "-0.24320653", "-0.9323994", "0.107133344", "0.72165495", "0.18415093", "0.516231", "-0.72466403", "-1.7858444", "0.8105049", "-0.03246455", "-0.28134635", "0.1401907", "-1.0962877", "0.59650886", "-1.4571093", "0.17641495", "-0.4247701", "0.3922232", "-0.10324542", "0.59876466", "1.2722067", "0.44954008", "0.8314541", "0.93782216", "0.092030995", "0.21265697", "0.8620099", "0.6572136", "-0.4905632", "0.8597902", "-0.5304481", "0.75154996", "-0.08270075", "-0.15581045", "0.6308359", "-0.70424396", "1.2192428", "-1.0415819", "0.5159396", "-1.1708944", "0.7234545", "-1.3937684", "-0.34430775", "0.01124008", "-0.9136063", "-0.77028865", "-0.74958515", "-1.6417469", "-0.23710324", "0.3652095", "-0.7359969", "0.723309", "0.36397123", "0.038414303", "0.68434596", "1.0889561", "0.65130246", "-0.15308331", "-0.7144949", "-0.11468651", "0.08454502", "0.41964078", "0.6527045", "1.1544558", "0.76450425", "1.3860142", "0.02346947", "-0.40604806", "1.6731557", "-0.059051227", "1.1121398", "-0.67545277", "-0.67147094", "-0.7746534", "-1.8196706", "-0.432403", "-1.1206143", "0.727905", "-0.33730522", "-0.3747801", "1.1576531", "0.025861535", "-0.7383892", "-0.8468475", "-0.51432216", "0.19154103", "0.50158966", "0.053940628", "-0.23293778", "-0.07760093", "-0.34746036", "-0.9086278", "0.07380931", "-0.034343958", "-0.004084528", "1.7502681", "-0.4058868", "-0.47893956", "0.53742456", "-0.43330598", "0.29441625", "1.0451128", "0.010437063", "-0.050851367", "1.1861757", "-0.049090642", "0.059503276", "-0.1687247", "0.21057147", "0.9900997", "-0.06765067", "1.0081074", "0.18459459", "0.23248796", "-0.0017927927", "-0.05624588", "-0.49263424", "0.60376185", "1.7457576", "0.9100344", "-0.6610703", "-1.829911", "-0.75003326", "-1.1828249", "-0.11489509", "0.30172604", "0.67539984", "-2.5378935", "0.17820415", "-0.2727428"]}