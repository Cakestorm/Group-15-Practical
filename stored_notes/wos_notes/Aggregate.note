{"title": "The Aggregate Method", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "The Aggregate Method"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "The "}, {"attributes": {"color": "#47a1b3"}, "insert": "aggregate method"}, {"insert": " is the most basic of the "}, {"attributes": {"link": "#Amortised_Analysis"}, "insert": "amortised analysis"}, {"insert": " techniques. \n\nIn the "}, {"attributes": {"color": "#47a1b3"}, "insert": "aggregate method"}, {"insert": ", we argue that any sequence of operations is ordered in some way - e.g. that a sequence of n operations is"}, {"attributes": {"color": "#98add9"}, "insert": " O(n)"}, {"insert": ", and then say that the total sequence has cost"}, {"attributes": {"color": "#98add9"}, "insert": " O(n)/n"}, {"insert": ", or "}, {"attributes": {"color": "#98add9"}, "insert": "O(1) "}, {"insert": "cost.\n\nThis is the "}, {"attributes": {"color": "#50c75a"}, "insert": "most direct method"}, {"insert": ", but only really useful with "}, {"attributes": {"color": "#50c75a"}, "insert": "one "}, {"insert": "or "}, {"attributes": {"color": "#50c75a"}, "insert": "two "}, {"insert": "operations being considered.\n\nFor more complex and sophisticated operations, use the "}, {"attributes": {"link": "#Accounting"}, "insert": "accounting "}, {"insert": "or "}, {"attributes": {"link": "#Potential"}, "insert": "potential function "}, {"insert": "methods instead.\n"}]}, "text": "The Aggregate Method\n\nThe aggregate method is the most basic of the amortised analysis techniques. \n\n\n\n\nIn the aggregate method, we argue that any sequence of operations is ordered in some way - e.g. that a sequence of n operations is O(n), and then say that the total sequence has cost O(n)/n, or O(1) cost.\n\n\n\n\nThis is the most direct method, but only really useful with one or two operations being considered.\n\n\n\n\nFor more complex and sophisticated operations, use the accounting or potential function methods instead.", "updatedAt": 1714593329054, "embeddings": ["-0.6414739", "-0.7885458", "-0.5518123", "-0.13956855", "0.05751937", "-0.073572405", "-0.7907407", "1.0151887", "1.3771397", "0.6328318", "1.2399561", "0.32455772", "-1.3874669", "-0.4718934", "-1.8946667", "-0.4418468", "-1.1026131", "0.80089045", "1.1105455", "0.14795889", "0.31476372", "-0.3453612", "1.2277397", "1.0924705", "0.26506436", "-0.9331993", "0.24911624", "0.19007964", "-0.118990086", "-0.080667645", "0.35625476", "-0.20544487", "1.129043", "0.2094177", "0.09074649", "-1.0855513", "-0.6802343", "-0.7429248", "-0.28078845", "0.39134395", "-1.462416", "-1.102787", "-0.36908665", "-0.91918784", "1.1279143", "0.04530201", "-0.95108986", "1.6962873", "-0.76433086", "-0.753031", "0.23881294", "0.38765585", "0.6902036", "-0.4501851", "0.65847594", "0.45031628", "1.4361757", "0.3196871", "0.13892402", "-0.27026165", "0.05587952", "1.1657765", "0.4286555", "-0.6457165", "-0.06175539", "0.3443842", "-0.3449602", "0.7600552", "0.06709681", "0.06159347", "1.0453137", "-1.093364", "0.68960834", "0.19767024", "0.254251", "0.79308933", "0.51796997", "-0.4680047", "-0.69770116", "-0.8249311", "-0.33760867", "0.07811437", "-0.4916245", "0.23214668", "-1.278658", "1.0036051", "0.23716651", "-0.78472626", "-1.3009284", "0.23076624", "-0.065686576", "0.83698726", "0.109708145", "0.09949316", "-0.030756785", "0.7612401", "-0.34558845", "-1.849289", "-0.044457387", "1.8215461", "-0.21872064", "0.87627447", "1.274708", "-0.7180886", "-0.40430927", "-0.80390596", "-0.6333827", "0.60409844", "-0.82693136", "-0.021799523", "-1.6386335", "-1.0431154", "2.4200518", "1.2155749", "1.1628256", "-0.11851601", "0.84272444", "-1.1025845", "1.0403498", "-1.9274994", "1.541659", "0.3463699", "0.07606622", "0.09536275", "1.141105", "0.29139826", "0.91842985", "1.0991573", "0.7321488", "-0.55898184", "0.6620701", "-0.38560396", "-0.548228", "1.2344033", "-1.0992097", "-0.63076836", "-0.051934008", "-0.2187225", "-0.3918238", "-0.7477164", "0.057685427", "-0.67342204", "-1.255982", "-0.98819333", "-1.5868046", "-1.237998", "0.24726352", "-0.007872489", "-0.23990351", "-1.2354989", "-0.5082987", "-0.2603839", "-0.7342831", "0.09926102", "-0.24979624", "-1.287727", "0.46881726", "0.2686953", "0.0024926588", "-0.57249445", "-0.43631935", "2.2079756", "0.2673197", "-0.4842439", "0.0674128", "0.09802568", "0.7626816", "-0.070291735", "-0.8186678", "-1.4344543", "2.0278282", "-0.3136241", "-0.91102767", "0.5243937", "0.05724201", "0.7315862", "-0.025789345", "0.14285243", "0.8065499", "0.29710072", "-0.05467879", "0.18943258", "0.38395905", "0.16355547", "-0.45263398", "0.257965", "-0.29737848", "1.3121359", "2.308699", "1.2175208", "0.059929714", "0.523997", "1.1476418", "0.6971619", "-0.63286", "0.4069619", "-0.08726129", "-0.10075282", "0.15835059", "0.9859864"]}