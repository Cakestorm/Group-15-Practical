{"title": "Article 1894", "body": "Strategic bidding problems in electricity markets are widely studied in power systems, often by formulating complex bi-level optimization problems that are hard to solve. The state-of-the-art approach to solve such problems is to reformulate them as mixed-integer linear programs (MILPs). However, the computational time of such MILP reformulations grows dramatically, once the network size increases, scheduling horizon increases, or randomness is taken into consideration. In this paper, we take a fundamentally different approach and propose effective and customized convex programming tools to solve the strategic bidding problem for producers in nodal electricity markets. Our approach is inspired by the Schmudgen's Positivstellensatz Theorem in semi-algebraic geometry; but then we go through several steps based upon both convex optimization and mixed-integer programming that results in obtaining close to optimal bidding solutions, as evidenced by several numerical case studies, besides having a huge advantage on reducing computation time. While the computation time of the state-of-the-art MILP approach grows exponentially when we increase the scheduling horizon or the number of random scenarios, the computation time of our approach increases rather linearly.\n", "text": "Strategic bidding problems in electricity markets are widely studied in power systems, often by formulating complex bi-level optimization problems that are hard to solve. The state-of-the-art approach to solve such problems is to reformulate them as mixed-integer linear programs (MILPs). However, the computational time of such MILP reformulations grows dramatically, once the network size increases, scheduling horizon increases, or randomness is taken into consideration. In this paper, we take a fundamentally different approach and propose effective and customized convex programming tools to solve the strategic bidding problem for producers in nodal electricity markets. Our approach is inspired by the Schmudgen's Positivstellensatz Theorem in semi-algebraic geometry; but then we go through several steps based upon both convex optimization and mixed-integer programming that results in obtaining close to optimal bidding solutions, as evidenced by several numerical case studies, besides having a huge advantage on reducing computation time. While the computation time of the state-of-the-art MILP approach grows exponentially when we increase the scheduling horizon or the number of random scenarios, the computation time of our approach increases rather linearly.\n", "updatedAt": 1714646227, "embeddings": ["-0.44842547", "0.4873718", "0.79559815", "-0.29332295", "-0.8362532", "-1.401072", "1.2056417", "-0.20679288", "-0.11265479", "-0.29809138", "0.42780548", "-1.6760814", "-1.1328958", "1.2622432", "1.2926718", "-1.0414789", "-1.7104204", "-0.8823152", "-1.370147", "-0.9225893", "-0.30504346", "-0.584079", "0.2978526", "-0.2281876", "-1.8452802", "-0.8347497", "-0.87952983", "-0.81773543", "-2.43586", "-0.44015256", "1.173674", "2.6044297", "1.0520644", "0.2082599", "-0.8480058", "0.2505072", "0.7578556", "-1.7087299", "-0.6842775", "-0.083375685", "-0.34032193", "-0.09180141", "-0.22543074", "-1.9655677", "0.1265063", "0.80649805", "-1.4668684", "0.7417895", "-0.98241246", "0.5609458", "-1.338732", "-1.314045", "1.1241273", "-0.7212912", "-0.19304061", "-0.161841", "0.88458997", "0.5850136", "-1.1298386", "-0.45568946", "1.4751279", "1.6217988", "0.14059412", "-1.1370032", "0.072784476", "0.20645125", "-0.7362421", "1.3389968", "-1.806108", "0.600193", "-1.684755", "-1.2108432", "1.1450335", "-0.6756916", "0.042555064", "-0.46728873", "1.3015187", "0.51291704", "0.1989308", "0.5944158", "-0.3180159", "-0.53451484", "-1.1542284", "0.48668215", "-0.035793994", "-0.08250875", "0.8940206", "0.7949129", "-1.0688376", "0.26932526", "-0.120044425", "0.4033939", "0.87544215", "0.30728355", "0.8725476", "2.269828", "-0.7477618", "-1.3797728", "1.7664665", "0.5231372", "0.7506879", "-0.48655993", "0.06698443", "-0.044343214", "-1.2876258", "0.8091054", "0.57987225", "0.26797882", "1.3975189", "-0.2661115", "0.88882613", "-0.25211003", "-0.94645923", "-0.23820989", "2.0613", "-0.8176637", "0.3880397", "-1.0759722", "0.90445906", "-0.9506393", "-1.1688112", "1.1782346", "-0.32155895", "-0.11995522", "-0.30830592", "1.7011341", "-1.5946623", "1.305799", "0.22424105", "0.6981179", "0.6560992", "0.42281905", "0.38951132", "-0.46224046", "0.19530453", "-0.44709983", "-0.68371224", "0.27363473", "0.095043294", "0.5437219", "0.31809488", "-0.7250155", "-0.64603835", "-1.1111503", "0.75476307", "0.75725096", "-0.6085473", "0.6928987", "1.4168328", "1.047056", "-0.12928624", "-0.3656471", "0.094684884", "0.15310824", "0.30673584", "-0.655081", "-0.30027354", "-0.12075537", "0.9557116", "2.0685477", "1.3088056", "-0.10954599", "-1.1370552", "-0.6143056", "0.8835039", "1.6058977", "0.99293053", "-0.91244644", "-1.1481434", "0.4377183", "0.029405084", "0.9462829", "0.89311147", "-0.3102303", "-0.018698476", "-0.8622472", "0.21397819", "0.16785514", "0.27942544", "-0.16230972", "0.9139878", "1.0251175", "0.24499317", "-0.22524372", "0.4368217", "1.2308847", "-0.31180495", "-0.214267", "1.0237404", "0.7925321", "0.25229272", "0.8290247", "0.24813955", "-0.98792577", "-0.086521596", "1.1627202", "0.788425", "0.13104025", "-0.36968133", "0.47216722"]}