{"title": "Algorithms and Data Structures", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "Algorithms and Data Structures"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "A real "}, {"attributes": {"color": "#47a1b3"}, "insert": "beast "}, {"insert": "of a course. Covers the following topics in the following order:\n\n"}, {"attributes": {"link": "#Amortised_Analysis"}, "insert": "Amortised Analysis"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Aggregate"}, "insert": "The aggregate method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Accounting"}, "insert": "The accounting/banker's method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Potential"}, "insert": "The potential function method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Sets"}, "insert": "Disjoint Sets"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Naive_Array"}, "insert": "Naive-array implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linked_List_Implementation"}, "insert": "Linked-list implementation"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Disjoint_Forests"}, "insert": "Disjoint Forests"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-height"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Path compression"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Link-by-rank"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Binary_Search_Trees"}, "insert": "Binary Search Trees"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Red_Black_Trees"}, "insert": "Red-Black trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Splay_Trees"}, "insert": "Splay trees"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Static_Optimality"}, "insert": "Static Optimality"}, {"insert": " and "}, {"attributes": {"link": "#Access_Lemma"}, "insert": "the Access Lemma"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Flow_Networks"}, "insert": "Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Definition of a flow and augmentations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Max-flow-min-cut theorem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Ford_Fulkerson"}, "insert": "Ford-Fulkerson algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "Capacity_Scaling"}, "insert": "Capacity-Scaling algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Edmonds-Karp algorithm"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Applications_of_Flow_Networks"}, "insert": "Applications of Flow Networks"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Bipartite_Matchings"}, "insert": "Bipartite matchings"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Min-cost perfect matchings"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Hall's Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Circulations"}, "insert": "Circulations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Survey problems"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Programming"}, "insert": "Linear Programming"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Duality"}, "insert": "Duality, strong and weak"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Linear-algebraic interpretations"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Solving LPs"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The Simplex method"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Game_Theory"}, "insert": "Game Theory"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Nash equilibria"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "The minimax and maximin values of a game"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#NP_Completeness"}, "insert": "NP-complete problems"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"attributes": {"link": "#Reductions"}, "insert": "Reductions"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#SAT"}, "insert": "SAT"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#3SAT"}, "insert": "3SAT"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "The Cook-Levin Theorem"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Vertex Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Clique"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Independent Set"}, {"attributes": {"indent": 2, "list": "bullet"}, "insert": "\n"}, {"insert": "Set Cover"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#TSP"}, "insert": "Travelling Salesperson Problem"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Approximation_Algorithms"}, "insert": "Approximation Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Combinatorial algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "LP-rounding algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "Randomised algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Fixed_Parameter_Algorithms"}, "insert": "Fixed Parameter Algorithms"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Bounded-Search-Tree algorithms"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linear_Kernels"}, "insert": "Linear kernels"}, {"attributes": {"indent": 1, "list": "bullet"}, "insert": "\n"}, {"insert": "\n\n"}]}, "text": "Algorithms and Data Structures\n\nA real beast of a course. Covers the following topics in the following order:\n\n\n\n\nAmortised Analysis\nThe aggregate method\nThe accounting/banker's method\nThe potential function method\nDisjoint Sets\nNaive-array implementation\nLinked-list implementation\nDisjoint Forests\nLink-by-height\nPath compression\nLink-by-rank\nBinary Search Trees\nRed-Black trees\nSplay trees\nStatic Optimality and the Access Lemma\nFlow Networks\nDefinition of a flow and augmentations\nMax-flow-min-cut theorem\nFord-Fulkerson algorithm\nCapacity-Scaling algorithm\nEdmonds-Karp algorithm\nApplications of Flow Networks\nBipartite matchings\nMin-cost perfect matchings\nHall's Theorem\nCirculations\nSurvey problems\nLinear Programming\nDuality, strong and weak\nLinear-algebraic interpretations\nSolving LPs\nThe Simplex method\nGame Theory\nNash equilibria\nThe minimax and maximin values of a game\nNP-complete problems\nReductions\nSAT\n3SAT\nThe Cook-Levin Theorem\nVertex Cover\nClique\nIndependent Set\nSet Cover\nTravelling Salesperson Problem\nApproximation Algorithms\nCombinatorial algorithms\nLP-rounding algorithms\nRandomised algorithms\nFixed Parameter Algorithms\nBounded-Search-Tree algorithms\nLinear kernels\n\n\n\n\n\n", "updatedAt": 1714669409463, "embeddings": ["-0.6560049", "-0.72970206", "-0.47517142", "0.055439103", "-0.058929846", "0.046021868", "-0.7469274", "1.1984057", "1.3873444", "0.3791053", "1.227655", "0.2097812", "-1.1217818", "-0.69178146", "-1.981421", "-0.40582845", "-1.0847896", "0.71640855", "0.87639904", "0.2618502", "0.34413865", "-0.23210599", "1.1561793", "0.8655876", "0.026162622", "-0.9037184", "0.2601846", "0.31397846", "0.035971165", "0.025776193", "0.26332682", "-0.098294824", "1.0877842", "0.29428387", "0.11411454", "-0.9486403", "-0.83758837", "-0.853503", "-0.32061177", "0.30858102", "-1.3574882", "-1.2434839", "-0.52066636", "-1.1096513", "1.2417932", "-0.23475032", "-0.866904", "1.6148952", "-0.519329", "-0.58590704", "0.073063076", "0.22626205", "0.65053314", "-0.4725569", "0.50263065", "0.26814246", "1.4924517", "0.016985957", "0.10211366", "-0.36887103", "-0.07046947", "0.7426143", "0.58354056", "-0.6793514", "0.14385277", "0.27042952", "-0.60297316", "0.709535", "0.03890016", "0.36800686", "1.038552", "-1.1858802", "0.6102868", "-0.03740564", "0.091714956", "0.91371524", "0.5620008", "-0.46309265", "-0.9573794", "-0.92648625", "-0.2225177", "-0.16585843", "-0.7356932", "0.19044805", "-1.3630483", "1.1997522", "0.1378415", "-0.7696123", "-1.0375115", "0.054104768", "-0.39084482", "0.7014434", "0.07051366", "0.08895809", "0.049362052", "0.81441486", "-0.53704965", "-1.9492173", "-0.08693231", "1.757757", "-0.38219997", "0.80386716", "1.3080602", "-0.74872166", "-0.719677", "-0.83238107", "-0.528534", "0.59001535", "-0.63219416", "-0.32777858", "-1.7979124", "-0.917337", "2.26111", "1.1088796", "1.3064041", "-0.23752435", "0.8075017", "-1.1085162", "1.2406411", "-1.7511806", "1.6432635", "0.09947889", "-0.10182707", "0.06926075", "1.0014908", "0.30493245", "0.8603199", "1.0202664", "0.881802", "-0.6402034", "0.7392291", "-0.30936548", "-0.5643485", "1.4782917", "-1.1185505", "-0.5623583", "-0.1440991", "-0.05597515", "-0.50219697", "-0.8316409", "0.22450158", "-0.85441065", "-1.0227077", "-1.0283341", "-1.5412301", "-1.0601485", "0.371293", "0.26319495", "-0.40482557", "-1.3302299", "-0.5014453", "-0.09769124", "-0.7605756", "0.1801172", "-0.30438575", "-1.2946604", "0.46271965", "0.34890702", "0.10755923", "-0.51961", "-0.28006524", "2.1579897", "0.45853087", "-0.2274223", "-0.024787955", "0.03837087", "0.5792569", "0.054945618", "-0.9536278", "-1.2244599", "1.9249815", "-0.16543671", "-1.1384536", "0.4658523", "0.17257981", "0.58327097", "0.04022912", "0.25037333", "0.88403857", "0.5360336", "-0.05737106", "0.17980403", "0.59881026", "0.022215597", "-0.3791088", "0.2811477", "-0.26105946", "1.4883424", "2.2483718", "1.210566", "0.19910374", "0.34951228", "1.0985744", "0.5223935", "-0.6418206", "0.5183164", "-0.07125627", "-0.13102733", "-0.038439404", "1.0127714"]}