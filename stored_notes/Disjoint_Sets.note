{"title": "Disjoint Sets", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "Disjoint Sets"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "A data structure which maintains a collection of disjoint sets. Each set has some arbitrary characteristic member, which is used to identify membership of an element to some set. Three operations are given as:\n\n"}, {"attributes": {"color": "#98add9"}, "insert": "Add-Set("}, {"attributes": {"color": "#47a1b3"}, "insert": "x"}, {"attributes": {"color": "#98add9"}, "insert": ")"}, {"attributes": {"color": "#edfaff"}, "insert": ", which adds a new set with singleton member "}, {"attributes": {"color": "#47a1b3"}, "insert": "x"}, {"attributes": {"color": "#edfaff"}, "insert": " to the data structure."}, {"attributes": {"list": "bullet"}, "insert": "\n"}, {"attributes": {"color": "#98add9"}, "insert": "Find-Set("}, {"attributes": {"color": "#47a1b3"}, "insert": "x"}, {"attributes": {"color": "#98add9"}, "insert": ")"}, {"attributes": {"color": "#edfaff"}, "insert": ", which returns the characteristic element of the set that "}, {"attributes": {"color": "#47a1b3"}, "insert": "x"}, {"attributes": {"color": "#edfaff"}, "insert": " is in."}, {"attributes": {"list": "bullet"}, "insert": "\n"}, {"attributes": {"color": "#98add9"}, "insert": "Union("}, {"attributes": {"color": "#47a1b3"}, "insert": "x,y"}, {"attributes": {"color": "#98add9"}, "insert": ")"}, {"attributes": {"color": "#edfaff"}, "insert": ", which takes the sets of which "}, {"attributes": {"color": "#47a1b3"}, "insert": "x"}, {"attributes": {"color": "#edfaff"}, "insert": " and "}, {"attributes": {"color": "#47a1b3"}, "insert": "y"}, {"attributes": {"color": "#edfaff"}, "insert": " are members, and adds their union to the data structure."}, {"attributes": {"list": "bullet"}, "insert": "\n"}, {"insert": "\nIn particular, disjoint sets are useful in "}, {"attributes": {"link": "#Kruskal"}, "insert": "Kruskal's Algorithm"}, {"insert": " in finding minimum spanning trees.\n\n"}, {"attributes": {"color": "#47a1b3"}, "insert": "Disjoint sets"}, {"insert": " considered in the "}, {"attributes": {"link": "#Algorithms_and_Data_Structures"}, "insert": "ADS"}, {"insert": " course may be implemented in the following ways:\n\n"}, {"attributes": {"link": "#Naive_Array"}, "insert": "Naive-array"}, {"attributes": {"list": "bullet"}, "insert": "\n"}, {"attributes": {"link": "#Linked_List_Implementation"}, "insert": "Linked-list"}, {"insert": " "}, {"attributes": {"list": "bullet"}, "insert": "\n"}, {"insert": "Union-Find"}, {"attributes": {"list": "bullet"}, "insert": "\n"}]}, "text": "Disjoint Sets\n\nA data structure which maintains a collection of disjoint sets. Each set has some arbitrary characteristic member, which is used to identify membership of an element to some set. Three operations are given as:\n\n\n\n\nAdd-Set(x), which adds a new set with singleton member x to the data structure.\nFind-Set(x), which returns the characteristic element of the set that x is in.\nUnion(x,y), which takes the sets of which x and y are members, and adds their union to the data structure.\n\n\n\n\nIn particular, disjoint sets are useful in Kruskal's Algorithm in finding minimum spanning trees.\n\n\n\n\nDisjoint sets considered in the ADS course may be implemented in the following ways:\n\n\n\n\nNaive-array\nLinked-list \nUnion-Find", "updatedAt": 1714666818976, "embeddings": ["0.07109412", "-0.5058028", "0.6767507", "1.099939", "2.3235016", "0.15148549", "-1.0187421", "0.5260666", "-1.4663014", "0.9799154", "-0.1368414", "0.25819522", "0.5523471", "-0.017531257", "0.8978754", "-0.050695725", "-0.7508716", "-1.3663663", "1.6423364", "0.43268102", "0.102929056", "1.0602527", "0.08787619", "-0.4685863", "-0.6262655", "0.6064602", "-0.6917202", "-1.4538232", "-1.3967922", "-2.4131448", "-2.0946014", "0.24871565", "-0.5238274", "0.22414838", "0.3346252", "-1.7081103", "0.087697245", "-1.3455548", "0.12056984", "0.82837844", "-1.9790511", "-0.6802095", "0.31078547", "-2.6453536", "0.5252934", "-0.50464535", "1.4618433", "0.25354898", "1.94724", "-0.05094787", "-0.23478228", "0.5076191", "-0.30975652", "-0.8948779", "0.07896137", "-0.7321642", "0.7801746", "0.28873158", "-0.051404424", "-0.1959771", "-0.43915713", "1.4747504", "0.7947661", "-1.8544098", "0.653917", "0.101599686", "0.4880835", "-1.5829111", "-1.7069595", "1.2775981", "-0.39776787", "-1.5029231", "-0.30604863", "-0.055977926", "-0.021118937", "-1.2368796", "0.7582118", "0.71204776", "-0.7618961", "1.328071", "0.7965309", "0.39186347", "1.3229626", "0.5528142", "1.2232809", "0.9584919", "-1.0420355", "0.18278782", "0.7249625", "0.927795", "0.06646583", "-0.4591583", "2.3943248", "-0.57438654", "-0.80750453", "1.2867465", "-0.299069", "0.06859294", "0.20676601", "-0.16022345", "-0.8169989", "-0.048805445", "0.7159348", "-1.1727936", "0.58044654", "-0.15215257", "0.21021017", "2.0980606", "-0.29167014", "0.928428", "-0.47171474", "1.2503134", "-0.8470695", "-0.7431502", "0.95381767", "0.2923327", "2.6664782", "-1.6993732", "-0.4907373", "-0.7508139", "-0.5744623", "0.943477", "-1.1998283", "0.14862826", "-0.26736057", "1.8352822", "-0.6359306", "0.05441786", "1.6999375", "0.7040271", "0.22067268", "-0.060969587", "-1.2444378", "0.6633443", "0.776056", "0.82765746", "-0.79664516", "-0.05360667", "-0.8728288", "1.4110456", "0.41963637", "1.4387656", "-1.5386399", "0.3694611", "-0.9000569", "1.1882794", "1.0713576", "1.6154056", "-1.3929425", "-0.98051876", "-2.2367544", "-1.0176393", "-0.66426724", "-2.0772905", "0.26989913", "1.3535235", "-0.049813665", "-0.08036659", "1.0742607", "1.9311142", "0.6612868", "-0.10078182", "-0.33638144", "-1.2335219", "0.47262877", "-0.74279934", "-1.2420915", "-2.4040303", "-0.12626071", "-0.73992634", "0.0557553", "-0.24074636", "1.2616354", "-0.43097124", "-0.07413688", "1.4927049", "-1.2410448", "1.103635", "1.5905197", "0.56495976", "-1.521959", "0.2870227", "0.46587116", "1.258057", "-0.6778105", "-0.72885156", "2.443983", "-0.45960882", "1.9083765", "-2.2893605", "0.15326378", "-0.86903703", "-2.4432678", "0.71858484", "0.15173008", "-1.2032714", "0.46599922", "1.2596996", "-1.3977726", "0.7249724"]}