{"title": "Implementation for Disjoint Sets", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "Implementation for Disjoint Sets"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "A basic way of maintaining a "}, {"attributes": {"link": "#Disjoint_Sets"}, "insert": "disjoint-set datastructure"}, {"insert": ". \n\nSuppose the elements we are storing are in the range [1..n]. We maintain an array R of representatives, where R[i] is the representative of i, and define the operations on the datastructure as:\n\nMake-Set(x): Set R[x] = x. This is O(1)."}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Find-Set(x): Return the value of R[x]. This is O(1)."}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Union(x,y): For each element i of R, if R[i] = x, then set R[i] = y. This is O(n) (!!)"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "\nWe are not a fan of the O(n) Union(x,y) operation. We can do better. In particular, we might want to consider:\n\n"}, {"attributes": {"link": "#Linked_List_Implementation"}, "insert": "Linked list implementations"}, {"attributes": {"list": "ordered"}, "insert": "\n"}, {"insert": "Disjoint Forests"}, {"attributes": {"list": "ordered"}, "insert": "\n"}]}, "text": "Implementation for Disjoint Sets\n\nA basic way of maintaining a disjoint-set datastructure. \n\n\n\n\nSuppose the elements we are storing are in the range [1..n]. We maintain an array R of representatives, where R[i] is the representative of i, and define the operations on the datastructure as:\n\n\n\n\nMake-Set(x): Set R[x] = x. This is O(1).\nFind-Set(x): Return the value of R[x]. This is O(1).\nUnion(x,y): For each element i of R, if R[i] = x, then set R[i] = y. This is O(n) (!!)\n\n\n\n\nWe are not a fan of the O(n) Union(x,y) operation. We can do better. In particular, we might want to consider:\n\n\n\n\nLinked list implementations\nDisjoint Forests", "updatedAt": 1715164053766, "embeddings": ["-1.0724583", "-1.2061348", "0.61681527", "0.075390354", "-0.3118109", "0.0010393369", "-1.2975059", "1.8410966", "-1.3608164", "1.1417006", "0.7006477", "-0.05024121", "-1.3625579", "-0.12336143", "1.8358622", "0.2822862", "0.15413994", "0.0035079445", "-0.24925712", "0.9786493", "1.1931422", "0.5312661", "0.78097916", "-1.7532125", "0.12034841", "0.5034148", "0.22660065", "-1.4823132", "-2.146424", "-1.2046849", "-1.5817317", "0.44284758", "-0.55719346", "2.320657", "0.81674933", "-0.6834059", "-0.36462507", "-1.5165331", "1.7961953", "-1.6197698", "-0.8672215", "0.11074683", "-0.05780874", "-1.3187344", "1.2421472", "-0.2965329", "-0.37648994", "0.3915416", "-0.24000609", "0.3402654", "-0.5075574", "0.36645275", "0.78270096", "-0.26615304", "0.4098326", "0.2550943", "1.615419", "-0.18160042", "-1.5062913", "-0.6343999", "-0.920959", "-1.251573", "-0.47279906", "-1.3486813", "0.11489504", "0.68288654", "1.1433176", "1.20126", "0.30017617", "1.3618407", "-1.2197446", "-1.0600173", "1.4773015", "1.3731798", "-1.1730579", "-0.7173113", "-1.0030174", "-0.047784563", "0.6070828", "-0.73728037", "-0.111841135", "-0.36213416", "0.13952054", "-0.39167345", "0.4025652", "-0.5865483", "-0.193466", "-0.89904505", "-0.2445508", "0.9371624", "-0.46909347", "0.574496", "0.5068806", "0.07929435", "0.5536061", "2.6138737", "-1.2112923", "0.31618392", "-1.334515", "-0.089730665", "-0.8818583", "0.40835875", "-0.3357738", "0.2228178", "0.7192858", "0.25792524", "-0.39437732", "0.96549827", "-0.05565835", "0.8507873", "0.4871153", "0.30158523", "0.5518306", "-1.8944209", "1.8538761", "-0.56094635", "-0.44907886", "-1.4861083", "0.18508299", "0.7838899", "0.19377671", "1.3380915", "-0.067961246", "0.5698708", "0.25287384", "-1.3866713", "-0.8357692", "-1.0226134", "0.8680991", "1.3375397", "0.30765876", "1.6647258", "0.6210809", "-1.4001263", "0.058263924", "0.36255878", "0.12152293", "0.46988162", "0.56480956", "1.0074583", "0.36514342", "0.048497174", "-1.8768846", "0.87006044", "-1.0887733", "1.4661423", "0.3922653", "1.8361441", "0.20919405", "0.89573354", "-0.7629082", "-0.4065882", "-0.67144173", "0.9680899", "1.5287564", "-0.31369787", "-0.5292752", "1.066952", "0.27819636", "0.22692505", "-0.3344825", "0.69084823", "-0.60654175", "-3.056344", "-0.20257731", "-0.19688642", "-0.67569166", "-2.5345652", "1.5327935", "0.3563101", "0.08449102", "0.31716093", "0.8283406", "0.48787144", "-0.8156448", "-0.4056147", "-0.293885", "-1.6255177", "0.79821306", "-1.3732282", "-0.14200544", "-0.3078303", "0.47404635", "0.6130663", "0.15557624", "-0.7391528", "0.72151315", "-0.58219695", "0.9037662", "-0.85503465", "-0.94492424", "-2.3435051", "-1.4633858", "-0.450205", "0.77361894", "-1.0628865", "0.5706888", "0.4988728", "-0.17707542", "0.19184586"]}