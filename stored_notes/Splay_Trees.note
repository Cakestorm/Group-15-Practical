{"title": "Splay Trees", "body": {"ops": [{"attributes": {"color": "#47a1b3", "underline": true}, "insert": "Splay Trees"}, {"attributes": {"header": 2}, "insert": "\n"}, {"insert": "A "}, {"attributes": {"color": "#47a1b3"}, "insert": "splay"}, {"insert": " "}, {"attributes": {"link": "#Trees"}, "insert": "tree"}, {"insert": " is a flavour of "}, {"attributes": {"link": "#Binary_Search_Trees"}, "insert": "binary search tree"}, {"insert": " which maintains a "}, {"attributes": {"link": "#Trees"}, "insert": "tree "}, {"insert": "with operation cost a "}, {"attributes": {"color": "#98add9"}, "insert": "constant factor"}, {"insert": " from a "}, {"attributes": {"link": "#Static_Optimality"}, "insert": "statically optimal"}, {"insert": " "}, {"attributes": {"link": "#Binary_Search_Trees"}, "insert": "BST"}, {"insert": ", without needing to store an extra "}, {"attributes": {"color": "#50c75a"}, "insert": "bit "}, {"insert": "of information as in a "}, {"attributes": {"link": "#Red_Black_Trees"}, "insert": "red-black tree"}, {"insert": ".\n"}]}, "text": "Splay Trees\n\nA splay tree is a flavour of binary search tree which maintains a tree with operation cost a constant factor from a statically optimal BST, without needing to store an extra bit of information as in a red-black tree.", "updatedAt": 1714595709081}